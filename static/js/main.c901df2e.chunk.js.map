{"version":3,"sources":["infraestructure/utils/storePersister.js","store/main/reducers.js","store/main/types.js","store/alert/reducers.js","store/alert/types.js","store/request/reducers.js","store/request/types.js","store/auth/reducers.js","store/auth/types.js","store/index.js","infraestructure/routes/PrivateRoute.js","ui/layout/partials/AppFooter.js","ui/layout/partials/AppHeader.js","ui/layout/partials/AppContent.js","ui/layout/templates/EmptyTemplate.js","ui/pages/main/Home.js","ui/layout/partials/AppInputs.js","ui/layout/partials/AppForm.js","infraestructure/routes/Routes.js","ui/pages/auth/Login.js","ui/pages/auth/SignUp.js","ui/pages/common/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["initialState","main","isLoading","message","notification","show","alert","type","request","url","description","data","isOk","response","auth","isLogged","user","token","routes","getState","serializedState","localStorage","getItem","JSON","parse","e","mainReducer","state","action","payload","alertReducer","requestReducer","authReducer","history","createBrowserHistory","rootReducer","combineReducers","router","connectRouter","connect","props","path","exact","component","to","Footer","Layout","AppFooter","className","Header","AppHeader","title","Content","AppContent","children","EmptyTemplate","withRouter","console","log","onClick","push","AppTextInput","commonProps","name","placeholder","icon","onChange","val","target","value","prefix","AppCheckInput","checked","AppDateInput","style","width","showToday","toDate","renderFields","fields","map","field","i","Item","key","renderInput","Text","AppForm","useState","formData","setFormData","textAlign","actions","htmlType","onCancel","onAccept","prop","registeredComponents","Home","defaultRoutes","Routes","result","r","store","createStore","applyMiddleware","thunkMiddleware","logger","routerMiddleware","subscribe","stringify","setItem","err","saveState","configureStore","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.c901df2e.chunk.js","sourcesContent":["const initialState = {\r\n    main: {\r\n        isLoading: false,\r\n        message: \"\",\r\n        notification: {\r\n            show: false,\r\n            message: \"\"\r\n        }\r\n    },\r\n    alert: {\r\n        show: false,\r\n        type: \"\",\r\n        message: \"\"\r\n    },\r\n    request: {\r\n        url: \"\",\r\n        description: \"\",\r\n        data: null,\r\n        isOk: false,\r\n        response: null,\r\n    },\r\n    auth: {\r\n        isLogged: false,\r\n        user: null,\r\n        token:null,\r\n        routes: []\r\n    }\r\n}\r\n\r\nexport const getState = () => {\r\n    try {\r\n        const serializedState = localStorage.getItem(\"__hive_system_state__\")\r\n        if (serializedState === null || serializedState === \"null\") {\r\n            return initialState\r\n        }\r\n        return JSON.parse(serializedState)\r\n\r\n    } catch (e) {\r\n        return initialState\r\n    }\r\n}\r\n\r\nexport const saveState = (state) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state)\r\n        localStorage.setItem(\"__hive_system_state__\", serializedState)\r\n        return true\r\n    } catch (err) {\r\n        console.log(err)\r\n        return false\r\n    }\r\n}\r\n","import { getState } from '../../infraestructure/utils/storePersister'\r\nimport {\r\n    SHOW_LOADING, HIDE_LOADING,\r\n    SHOW_NOTIFICATION, HIDE_NOTIFICATION\r\n} from \"./types\"\r\n\r\nconst initialState = getState().main\r\n\r\nconst mainReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SHOW_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                message: action.payload.message,\r\n            }\r\n\r\n        case HIDE_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                message: \"\"\r\n            }\r\n\r\n        case SHOW_NOTIFICATION:\r\n            return {\r\n                ...state,\r\n                notification: {\r\n                    show: true,\r\n                    message: action.payload.message\r\n                }\r\n            }\r\n\r\n        case HIDE_NOTIFICATION:\r\n            return {\r\n                ...state,\r\n                notification: {\r\n                    show: false,\r\n                    message: \"\"\r\n                }\r\n            }\r\n\r\n        default:\r\n            return { ...state }\r\n    }\r\n}\r\n\r\nexport default mainReducer","\r\nexport const SHOW_LOADING = 'SHOW_LOADING'\r\nexport const HIDE_LOADING = 'HIDE_LOADING'\r\n\r\nexport const SHOW_NOTIFICATION = 'SHOW_NOTIFICATION'\r\nexport const HIDE_NOTIFICATION = 'HIDE_NOTIFICATION'\r\n","import { getState } from \"../../infraestructure/utils/storePersister\"\r\n\r\nimport { SHOW_ALERT,HIDE_ALERT } from \"./types\"\r\n\r\nconst alertReducer = (state = getState().alert, action) => {\r\n    switch (action.type) {\r\n        case SHOW_ALERT:\r\n            return {\r\n                ...state,\r\n                alert: {\r\n                    show: true,\r\n                    type: action.payload.type,\r\n                    message: action.payload.message\r\n                }\r\n            }\r\n\r\n        case HIDE_ALERT:\r\n            return {\r\n                ...state,\r\n                alert: {\r\n                    show: false,\r\n                    type: \"\",\r\n                    message: \"\"\r\n                }\r\n            }\r\n\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n\r\nexport default alertReducer\r\n","export const SHOW_ALERT = 'SHOW_ALERT'\r\nexport const SHOW_OK_ALERT = 'SHOW_OK_ALERT'\r\nexport const SHOW_INFO_ALERT = 'SHOW_INFO_ALERT'\r\nexport const SHOW_WARN_ALERT = 'SHOW_WARN_ALERT'\r\nexport const SHOW_ERROR_ALERT = 'SHOW_ERROR_ALERT'\r\nexport const HIDE_ALERT = 'HIDE_ALERT'\r\n","import { getState } from \"../../infraestructure/utils/storePersister\";\r\nimport { START_REQUEST, END_REQUEST } from './types'\r\n\r\nconst requestReducer = (state = getState().request, action) => {\r\n    switch (action.type) {\r\n        case START_REQUEST:\r\n            return {\r\n                ...state,\r\n                url: action.payload.url,\r\n                description: action.payload.description,\r\n                data: action.payload.data\r\n            }\r\n\r\n        case END_REQUEST:\r\n            return {\r\n                ...state,\r\n                isOk: action.payload.isOk,\r\n                response: action.payload.response\r\n            }\r\n\r\n        default:\r\n            return { ...state }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default requestReducer","export const START_REQUEST = 'START_REQUEST'\r\nexport const END_REQUEST = 'END_REQUEST'\r\n","import { getState } from \"../../infraestructure/utils/storePersister\"\r\nimport { SIGN_IN, SIGN_OUT } from \"./types\"\r\n\r\nconst authReducer = (state = getState().auth, action) => {\r\n    switch (action.type) {\r\n        case SIGN_IN:\r\n            return {\r\n                ...state,\r\n                isLogged: true,\r\n                user: action.payload.user,\r\n                token: action.payload.token,\r\n            }\r\n\r\n        case SIGN_OUT:\r\n            return {\r\n                ...state,\r\n                isLogged: false,\r\n                user: null,\r\n                token: null,\r\n                routes: []\r\n            }\r\n        default:\r\n            return { ...state }\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer","export const SIGN_IN = 'SIGN_IN'\r\nexport const SIGN_OUT = 'SIGN_OUT'\r\n\r\n","import { combineReducers, createStore, applyMiddleware } from 'redux'\r\n\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\nimport { createBrowserHistory } from 'history'\r\n\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\r\n\r\nimport mainReducer from './main/reducers'\r\nimport alertReducer from './alert/reducers'\r\nimport requestReducer from './request/reducers'\r\nimport authReducer from './auth/reducers'\r\n\r\nimport { getState, saveState } from '../infraestructure/utils/storePersister'\r\n\r\nexport const history = createBrowserHistory()\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    main: mainReducer,\r\n    alert: alertReducer,\r\n    request: requestReducer,\r\n    auth:authReducer,\r\n    router: connectRouter(history),\r\n})\r\n\r\nexport const configureStore = () => {\r\n    const initialState = getState()\r\n\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(\r\n            thunkMiddleware,\r\n            logger,\r\n            routerMiddleware(history)\r\n        )\r\n    )\r\n\r\n\r\n    store.subscribe(() => {\r\n        const currentState = store.getState()\r\n        saveState(currentState)\r\n    })\r\n\r\n    return store\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Route, Redirect } from 'react-router'\r\n\r\nconst PrivateRoute = (props) => {\r\n    if (props.isLogged) {\r\n        return <Route path={props.path} exact component={props.component} />\r\n    }\r\n    return <Redirect to=\"/Login\" />\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLogged: state.auth.isLogged\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute)","import React from 'react'\r\nimport { Layout } from 'antd'\r\nconst { Footer } = Layout\r\n\r\nconst AppFooter = () => {\r\n    return (<Footer className=\"footer\">\r\n        Copyright © 2020 - Powered by CCSolutions\r\n    </Footer>)\r\n}\r\n\r\nexport default AppFooter","import React from 'react'\r\nimport { Layout } from 'antd'\r\nconst { Header } = Layout\r\n\r\nconst AppHeader = (props) => {\r\n    return (<Header className=\"header\">\r\n        {props.title}\r\n    </Header>)\r\n}\r\n\r\nexport default AppHeader","import React from 'react'\r\nimport { Layout } from 'antd'\r\nconst { Content } = Layout\r\n\r\nconst AppContent = (props) => {\r\n    return (<Content className=\"content\">\r\n        {props.children}\r\n    </Content>)\r\n}\r\n\r\nexport default AppContent","import React from 'react'\r\nimport { Layout } from 'antd'\r\nimport AppFooter from '../partials/AppFooter'\r\nimport AppHeader from '../partials/AppHeader'\r\nimport AppContent from '../partials/AppContent'\r\nexport const EmptyTemplate = (props) => {\r\n    return (<Layout >\r\n        <AppHeader title={props.title}/>\r\n        <AppContent>\r\n            {props.children}\r\n        </AppContent>\r\n      <AppFooter/>\r\n    </Layout>)\r\n}","import React from 'react'\r\nimport { withRouter } from 'react-router'\r\nimport { EmptyTemplate } from '../../layout/templates/EmptyTemplate'\r\nimport { Button } from 'antd'\r\n\r\nconst HomePage = (props) => {\r\n    console.log(props)\r\n    return (<EmptyTemplate title=\"Welcome to Hive System\">\r\n        <br /><br /><br />\r\n        <Button type=\"primary\"\r\n            onClick={() => props.history.push(\"/Login\")}>\r\n            Login Here!\r\n                        </Button>\r\n        <Button type=\"link\"\r\n            onClick={() => props.history.push(\"/SignUp\")}>\r\n            or Sign Up Here!\r\n                     </Button>\r\n    </EmptyTemplate>)\r\n}\r\n\r\nexport default withRouter(HomePage) \r\n","import React from 'react'\r\nimport { Input, Icon, Checkbox, DatePicker } from 'antd'\r\n\r\n//This works for text, email, pass & numeric\r\nexport const AppTextInput = (props) => {\r\n    let { name, type, placeholder, icon, onChange } = props.commonProps\r\n    return <Input placeholder={placeholder}\r\n        onChange={(val) => onChange(name, val.target.value)}\r\n        prefix={icon && <Icon type={icon} />}\r\n        type={type} />\r\n}\r\n\r\nexport const AppCheckInput = (props) => {\r\n    let { name, placeholder, onChange } = props.commonProps\r\n    return <Checkbox name={name}\r\n        onChange={(val) => onChange(name, val.target.checked)} >\r\n        {placeholder}\r\n    </Checkbox>\r\n}\r\n\r\nexport const AppDateInput = (props) => {\r\n    let { name, placeholder, onChange } = props.commonProps\r\n    return <DatePicker name={name}\r\n        style={{ width: \"100%\" }}\r\n        showToday\r\n        placeholder={placeholder}\r\n        onChange={(val) => onChange(name, val.toDate())} />\r\n}","import React, { useState } from 'react'\r\nimport { Card, Form, Button, Typography } from 'antd'\r\nimport { AppTextInput, AppCheckInput, AppDateInput } from './AppInputs'\r\n\r\nconst AppForm = (props) => {\r\n    const [formData, setFormData] = useState({})\r\n\r\n    const handleInputs = (prop, val) => {\r\n        setFormData({\r\n            ...formData,\r\n            [prop]: val\r\n        })\r\n    }\r\n\r\n    return <Card title={props.title}\r\n        style={{ textAlign: \"center\", width: props.width || \"max-content\" }}\r\n        actions={[\r\n            <Button type=\"link\" htmlType=\"button\" onClick={props.onCancel}>Sign Up</Button>,\r\n            <Button type=\"primary\" htmlType=\"button\"  onClick={() => props.onAccept(formData)} >Sign In</Button>\r\n\r\n        ]}>\r\n        <Form >\r\n            {props.fields ? renderFields(props.fields, handleInputs) :\r\n                \"No fields Found!\"}\r\n        </Form>\r\n    </Card>\r\n\r\n}\r\n\r\nconst renderFields = (fields, onChange) => {\r\n    return (<>{\r\n        fields.map((field, i) => {\r\n            field.onChange = onChange\r\n            return <Form.Item\r\n                key={i}\r\n                name={field.name}  >\r\n                {renderInput(field)}\r\n            </Form.Item>\r\n        })\r\n    }</>)\r\n}\r\nconst renderInput = (props) => {\r\n    switch (props.type) {\r\n        case \"text\":\r\n        case \"email\":\r\n        case \"password\":\r\n        case \"number\":\r\n            return <AppTextInput commonProps={props} />\r\n        case \"check\":\r\n            return <AppCheckInput commonProps={props} />\r\n        case \"date\":\r\n            return <AppDateInput commonProps={props} />\r\n        default:\r\n            return <Typography.Text>{props.type} type not implemented!</Typography.Text>\r\n    }\r\n}\r\n\r\nexport default AppForm","import React from 'react'\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\n\r\n//Routes Type\r\nimport PrivateRoute from './PrivateRoute'\r\n\r\n//Pages\r\nimport Home from '../../ui/pages/main/Home'\r\nimport Login from '../../ui/pages/auth/Login'\r\nimport SignUp from '../../ui/pages/auth/SignUp'\r\nimport Dashboard from '../../ui/pages/common/Dashboard'\r\n\r\nconst registeredComponents = {\r\n    \"Home\": Home,\r\n    \"Login\": Login,\r\n    \"SignUp\": SignUp,\r\n    \"Dashboard\": Dashboard\r\n}\r\n\r\nconst defaultRoutes = [\r\n    { type: \"public\", path: \"/\", name: \"Home\" },\r\n    { type: \"public\", path: \"/Login\", name: \"Login\" },\r\n    { type: \"public\", path: \"/SignUp\", name: \"SignUp\" },\r\n    // { type: \"private\", path: \"/Dashboard\", name: \"Dashboard\" },    \r\n]\r\n\r\n\r\nconst Routes = () => {\r\n    let result = defaultRoutes.map((r, i) => {\r\n        if (r.type === \"public\") {\r\n            return  <Route key={i} path={r.path} exact component={registeredComponents[r.name]} />\r\n        } else {\r\n            console.log(r)\r\n            return <PrivateRoute key={i} path={r.path} component={registeredComponents[r.name]} />\r\n        }\r\n    })\r\n    return (<Router>\r\n        {result}\r\n    </Router>)\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router'\r\nimport { EmptyTemplate } from '../../layout/templates/EmptyTemplate'\r\nimport AppForm from '../../layout/partials/AppForm';\r\n\r\nconst LoginPage = (props) => {\r\n    const formFields = [\r\n        {\r\n            name: \"email\",\r\n            placeholder: \"Email\",\r\n            type: \"email\",\r\n            icon: \"mail\"\r\n        },\r\n        {\r\n            name: \"pass\",\r\n            placeholder: \"Password\",\r\n            type: \"password\",\r\n            icon: \"lock\"\r\n        },\r\n        {\r\n            name: \"rememberMe\",\r\n            placeholder: \"Remember Me\",\r\n            type: \"check\",\r\n        }\r\n    ]\r\n    const handleSubmit = (data) => {\r\n        console.log(data)\r\n    }\r\n    const handleCancel = () => {\r\n        props.history.push(\"/SignUp\")\r\n    }\r\n    return (<EmptyTemplate title=\"Hive System Beta\">\r\n        <br />\r\n        <AppForm width=\"400px\"\r\n            title=\"Login Here!\"\r\n            fields={formFields}\r\n            onAccept={handleSubmit}\r\n            onCancel={handleCancel} />\r\n    </EmptyTemplate>)\r\n}\r\n\r\nexport default withRouter(LoginPage)","import React from 'react'\r\nimport { withRouter } from 'react-router'\r\n\r\nconst SignUpPage = () => {\r\n    return (<div>\r\n        <h1>Sign Up</h1>\r\n    </div>)\r\n}\r\n\r\nexport default withRouter(SignUpPage)","import React from 'react'\r\nimport { withRouter } from 'react-router'\r\n\r\nconst Dashboard = () => {\r\n    return <p> Dashboard</p>\r\n}\r\n\r\nexport default withRouter(Dashboard)","import React from 'react';\r\n\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore, history } from './store';\r\n\r\nimport './App.css';\r\nimport Routes from './infraestructure/routes/Routes';\r\n\r\nconst store = configureStore()\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <ConnectedRouter history={history}>\r\n        <Routes />\r\n      </ConnectedRouter>\r\n    </Provider>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}